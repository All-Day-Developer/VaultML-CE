# Default values for VaultML CE
replicaCount: 1
domainName: NOT_PRESENT
image:
  repository: vaultml/vaultml-ce
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: vaultml.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# VaultML Configuration
config:
  jwtSecret: "supersecretjwtkey"  # Change this in production!
  
# Database Configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "vaultml-postgres"
    username: "vaultml"
    password: "vaultmlpass"
    database: "vaultml"
  primary:
    persistence:
      enabled: true
      size: 8Gi

# External PostgreSQL (when postgresql.enabled=false)
externalDatabase:
  host: localhost
  port: 5432
  username: vaultml
  password: vaultmlpass
  database: vaultml

# MinIO S3 Storage
minio:
  enabled: true
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  defaultBuckets: "models"
  persistence:
    enabled: true
    size: 20Gi

# External S3 Configuration (when minio.enabled=false)
externalS3:
  endpoint: "http://localhost:9000"
  region: "us-east-1"
  bucket: "models"
  accessKey: "minioadmin"
  secretKey: "minioadmin"

# Persistence for temporary files
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 1Gi
