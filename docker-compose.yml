version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: vaultml-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: vaultml
      POSTGRES_PASSWORD: vaultmlpass
      POSTGRES_DB: vaultml
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vaultml-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vaultml -d vaultml"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  minio:
    image: minio/minio:latest
    container_name: vaultml-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000" 
      - "9001:9001" 
    volumes:
      - minio_data:/data
    networks:
      - vaultml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  vaultml:
    image: ghcr.io/all-day-developer/vaultml-ce:latest
    container_name: vaultml-app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+asyncpg://vaultml:vaultmlpass@postgres:5432/vaultml
      JWT_SECRET: vaultml_jwt_secret_change_in_production
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: vaultml-models
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_REGION: us-east-1
      CORS_ORIGINS: http://localhost:3000,http://localhost:8000
      
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - vaultml-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s

networks:
  vaultml-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
